'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.registerModuleSaga = exports.getSagas = exports.getModuleState = exports.registerModuleReducer = exports.getReducers = exports.setModuleReducerKey = exports.getModuleReducerKey = undefined;

var _curry = require('curry');

var _curry2 = _interopRequireDefault(_curry);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var moduleReducerKey = 'module';
var moduleReducers = {};
var reducerHasBeenGet = false;

var getModuleReducerKey = exports.getModuleReducerKey = function getModuleReducerKey() {
  return moduleReducerKey;
};

var setModuleReducerKey = exports.setModuleReducerKey = function setModuleReducerKey(key) {
  moduleReducerKey = key;
};

var getReducers = exports.getReducers = function getReducers() {
  reducerHasBeenGet = true;
  return moduleReducers;
};

var registerModuleReducer = exports.registerModuleReducer = function registerModuleReducer(moduleName, reducer) {
  if (reducerHasBeenGet === true) {
    console.warn('It seems you try to register "' + moduleName + '" but reducers has been already get.');
  }
  if (!moduleReducers[moduleName]) moduleReducers[moduleName] = reducer;else console.warn('The reducer "' + moduleName + '" is already registered. Please check you don\'t register your reducer twice.');
};

var getModuleState = exports.getModuleState = (0, _curry2.default)(function (moduleName, state) {
  return state[moduleReducerKey][moduleName];
});

var moduleSagas = [];
var sagaHasBeenGet = false;

var getSagas = exports.getSagas = function getSagas() {
  sagaHasBeenGet = true;
  return moduleSagas;
};

var registerModuleSaga = exports.registerModuleSaga = function registerModuleSaga(saga) {
  if (reducerHasBeenGet === true) {
    console.warn('It seems you try to register "' + moduleName + '" but sagas has been already get.');
  }
  moduleSagas.push(saga);
};
